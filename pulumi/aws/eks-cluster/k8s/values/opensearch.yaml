singleNode: false

roles:
  - master
  - ingest
  - data
  - remote_cluster_client

replicas: 3

config:
  log4j2.properties: |-
    status = error

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
  # https://github.com/opensearch-project/security/blob/main/config/opensearch.yml.example
  opensearch.yml: |-
    cluster.name: test
    network.host: 0.0.0.0
    plugins:
      security:
        disabled: true
        ssl:
          transport:
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
            enforce_hostname_verification: false
          http:
            enabled: false
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
        nodes_dn_dynamic_config_enabled: true
        nodes_dn:
          - "CN=*.example.com, OU=node, O=node, L=test, C=de"
        allow_unsafe_democertificates: true
        allow_default_init_securityindex: true
        authcz:
          admin_dn:
            - CN=kirk,OU=client,O=client,L=test,C=de
        audit.type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
        system_indices:
          enabled: false
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]

opensearchJavaOpts: "-Xmx8192M -Xms8192M"

resources:
  requests:
    cpu: 1000m
    memory: 2048Mi

persistence:
  enabled: true
  storageClass: ebs
  accessModes:
    - ReadWriteOnce
  size: 8Gi

nodeSelector: {}
tolerations: []

labels:
  app: opensearch

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app: opensearch
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app: opensearch

antiAffinityTopologyKey: kubernetes.io/hostname
antiAffinity: hard
nodeAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
    nodeSelectorTerms:
      - matchExpressions:
          - key: karpenter
            operator: In
            values:
              - enabled
          - key: app
            operator: In
            values:
              - opensearch

ingress:
  enabled: true
  ingressClassName: nginx-external
  hosts:
    - opensearch.dev.lokalise.cloud
  path: /
  tls: []

extraObjects:
  #- apiVersion: monitoring.coreos.com/v1
  #  kind: ServiceMonitor
  #  metadata:
  #    labels:
  #      app: opensearch
  #    name: opensearch
  #  spec:
  #    endpoints:
  #    - honorLabels: true
  #      path: /metrics
  #      port: metrics
  #      scheme: http
  #      scrapeTimeout: 30s
  #    jobLabel: opensearch
  #    namespaceSelector:
  #      matchNames:
  #      - opensearch
  #    selector:
  #      matchLabels:
  #        app.kubernetes.io/instance: opensearch
  #        app.kubernetes.io/name: opensearch
  - apiVersion: karpenter.sh/v1alpha5
    kind: Provisioner
    metadata:
      labels:
        app: opensearch
      name: opensearch
    spec:
      consolidation:
        enabled: false
      ttlSecondsAfterEmpty: 30
      ttlSecondsUntilExpired: 2592000
      labels:
        karpenter: enabled
        app: opensearch
      taints: []
      providerRef:
        name: default
      requirements:
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values:
          - r
      - key: karpenter.k8s.aws/instance-memory
        operator: In
        values:
        - "16384"
      - key: kubernetes.io/arch
        operator: In
        values:
        - arm64
      - key: kubernetes.io/os
        operator: In
        values:
        - linux
      - key: karpenter.sh/capacity-type
        operator: In
        values:
        - spot
        - on-demand
