extraDeploy: []

objstoreConfig:
  type: S3
  config:
    bucket: thanos-storage-46b837f
    endpoint: s3.eu-central-1.amazonaws.com
    aws_sdk_auth: true

query:
  enabled: true
  recplicaCount: 1
  podLabels: {}
  logLevel: info
  logFormat: logfmt
  service:
    type: ClusterIP
    ports:
      http: 9090
    annotations: {}
  serviceGrpc:
    type: ClusterIP
    ports:
      grpc: 10901
    annotations: {}
  ingress:
    enabled: true
    ingressClassName: nginx-internet-facing
    annotations: {}
    labels: {}
    hostname: thanos-query.dev.lokalise.cloud
    pathType: Prefix
    path: /
    tls: false
    grpc:
      enabled: false
      hostname: thanos-query-grpc.dev.lokalise.cloud
  # Must be the same as `prometheus.prometheusSpec.replicaExternalLabelName` in Prometheus stack values
  replicaLabel: [prometheus_replica]
  stores:
    # Prometheus sidecar
    - prometheus-kube-prometheus-thanos-discovery.monitoring.svc.cluster.local:10902
    # Store gateway to get data from S3
    - thanos-storegateway.monitoring.svc.cluster.local:10901
  sdConfig: ""

queryFrontend:
  enabled: false
  recplicaCount: 1
  podLabels: {}
  logLevel: info
  logFormat: logfmt

bucketweb:
  enabled: true
  recplicaCount: 1
  podLabels: {}
  logLevel: info
  logFormat: json
  refresh: 5m
  timeout: 5m
  extraFlags: []
  #  - "--objstore.config={type: S3, config: {bucket: lokalise-test-plat-s3-monitoring-thanos-storage, endpoint: s3.eu-central-1.amazonaws.com, aws_sdk_auth: true}}"
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::484308071187:role/eks-main-thanos-storage-a2b7f26
  ingress:
    enabled: true
    ingressClassName: nginx-internet-facing
    annotations: {}
    labels: {}
    hostname: thanos-bucketweb.dev.lokalise.cloud
    pathType: Prefix
    path: /
    tls: false

compactor:
  enabled: false
  podLabels: {}
  logLevel: info
  logFormat: logfmt

storegateway:
  enabled: true
  recplicaCount: 3
  podLabels: {}
  service:
    type: ClusterIP
    ports:
      http: 9090
      grpc: 10901
    annotations: {}
  extraFlags: []
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::484308071187:role/eks-main-thanos-storage-a2b7f26
  ingress:
    enabled: true
    ingressClassName: nginx-internet-facing
    annotations: {}
    labels: {}
    hostname: thanos-storegateway.dev.lokalise.cloud
    pathType: Prefix
    path: /
    tls: false
    grpc:
      enabled: false
      hostname: thanos-storegateway-grpc.dev.lokalise.cloud
  persistence:
    enabled: true
    storageClass: ebs
    accessModes:
      - ReadWriteOnce
    size: 8Gi

ruler:
  enabled: false

receive:
  enabled: false
  replicaCount: 3
  podLabels: {}
  tsdbRetention: 15d
  replicationFactor: 2
  logLevel: debug
  logFormat: logfmt
  service:
    type: ClusterIP
    ports:
      http: 10902
      grpc: 10901
      remote: 19291
    annotations: {}
  replicaLabel: replica

receiveDistributor:
  enabled: false

metrics:
  enabled: false
