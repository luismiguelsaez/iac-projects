crds:
  enabled: true

prometheusOperator:
  enabled: true
  affinity: {}
  tolerations: []

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx-internet-facing
    hosts:
      - prometheus.dev.lokalise.cloud
    paths:
      - /
    pathType: Prefix
    tls: []
  prometheusSpec:
    replicas: 3
    retention: 10d
    resources:
      requests:
        cpu: 1000m
        memory: 2048Mi
      limits:
        cpu: 2000m
        memory: 4096Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: app
                  operator: In
                  values:
                    - prometheus
    tolerations: []
    podMetadata:
      labels:
        app: prometheus
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: prometheus
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: prometheus
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ebs
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi

alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx-internet-facing
    hosts:
      - alertmanager.dev.lokalise.cloud
    paths:
      - /
    pathType: Prefix
    tls: []
  alertmanagerSpec:
    replicas: 1
    retention: 120h
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ebs
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
    affinity: {}
    tolerations: []

grafana:
  enabled: true
  adminPassword: prom-operator
  ingress:
    enabled: true
    ingressClassName: nginx-internet-facing
    hosts:
      - grafana.dev.lokalise.cloud
    paths:
      - /
    pathType: Prefix
    tls: []

nodeExporter:
  enabled: true

extraManifests:
  - apiVersion: karpenter.sh/v1alpha5
    kind: Provisioner
    metadata:
      labels:
        app: prometheus
      name: prometheus
    spec:
      consolidation:
        enabled: false
      ttlSecondsAfterEmpty: 30
      ttlSecondsUntilExpired: 2592000
      labels:
        karpenter: enabled
        app: prometheus
      taints: []
      providerRef:
        name: bottlerocket
      requirements:
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values:
          - t
      - key: karpenter.k8s.aws/instance-cpu
        operator: In
        values:
        - "2"
      - key: karpenter.k8s.aws/instance-memory
        operator: In
        values:
        - "4096"
      - key: kubernetes.io/arch
        operator: In
        values:
        - amd64
        - arm64
      - key: kubernetes.io/os
        operator: In
        values:
        - linux
      - key: karpenter.sh/capacity-type
        operator: In
        values:
        - on-demand
