---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  amiFamily: AL2
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 20Gi
        volumeType: gp3
        encrypted: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  securityGroupSelector:
    #karpenter.sh/discovery: eks-main
    kubernetes.io/cluster/eks-main: owned # Targets the EKS cluster default security group
  subnetSelector:
    karpenter.sh/discovery/private: eks-main
  userData: |-
    MIME-Version: 1.0
    Content-Type: multipart/mixed; boundary="BOUNDARY"

    --BOUNDARY
    Content-Type: text/x-shellscript; charset="us-ascii"

    #!/bin/bash
    [ ! -d /home/ec2-user/.ssh ] && mkdir /home/ec2-user/.ssh
    chmod 0700 /home/ec2-user/.ssh
    echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDD5joG5XuIrFlPXTG83iRQPOJoYE6IrXInZRwW4gX3WCIVW60tJoOmnx4bTytXMpKeWtxPuT9STYD/ehu7YimoOfClTkBZURxs2dK4gdBDYcluD7jkA6SgkGeufu8HLqySnD+myiHNfICgz7proOJU6ggMDqd5Z4zHCjei3IwrY8UU/1s6/9ujHJCUhkRWFT1uKJx79UIwNe2f9IWApBXB9ctQNjc0anwVSWdMfKwcv/w7YSGjR5KF1G/IlCCBGUVyLIftBwIBG/ZBF7VoTDIobnaXStOfFHzFKEzQ6o0AuCk+hFU1sAqhIxU7VOcVYsFrnqRSAx6UBZSY0j00MK+n luismiguelsaez' >> /home/ec2-user/.ssh/authorized_keys
    chmod 0600 /home/ec2-user/.ssh/authorized_keys
    chown -R ec2-user.ec2-user /home/ec2-user
    --BOUNDARY--
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: bottlerocket
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  amiFamily: Bottlerocket
  blockDeviceMappings:
    # Root device
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 4Gi
        volumeType: gp3
        encrypted: true
    # Data device: Container resources such as images and logs
    - deviceName: /dev/xvdb
      ebs:
        volumeSize: 20Gi
        volumeType: gp3
        encrypted: true
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required
  securityGroupSelector:
    kubernetes.io/cluster/eks-main: owned
  subnetSelector:
    karpenter.sh/discovery/private: eks-main
  userData: |-
    [settings.kubernetes.eviction-hard]
    "memory.available" = "12%"
    "nodefs.available" = "10%"
    "nodefs.inodesFree" = "5%"
    [settings.kubernetes.eviction-soft]
    "memory.available" = "15%"
    "nodefs.available" = "12%"
    "nodefs.inodesFree" = "8%"
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  labels:
    app: nginx
  name: nginx-provisioner
spec:
  consolidation:
    enabled: false
  ttlSecondsAfterEmpty: 30
  ttlSecondsUntilExpired: 2592000
  labels:
    karpenter: enabled
    app: nginx
  taints: []
  providerRef:
    name: bottlerocket
  requirements:
  - key: karpenter.k8s.aws/instance-category
    operator: In
    values:
      - t
  - key: karpenter.k8s.aws/instance-cpu
    operator: In
    values:
    - "2"
  - key: karpenter.k8s.aws/instance-memory
    operator: In
    values:
    - "2048"
  - key: kubernetes.io/arch
    operator: In
    values:
    - arm64
  - key: kubernetes.io/os
    operator: In
    values:
    - linux
  - key: karpenter.sh/capacity-type
    operator: In
    values:
    - spot
    - on-demand
